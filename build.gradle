buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
        springBatchAdminVersion = '2.0.0.BUILD-SNAPSHOT'
    }
    
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'batch-processing-kata'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
      maven {
        url 'https://repo.spring.io/libs-snapshot-local/'
    }
}
ext{
 camelVersion = '2.15.2'
}
 
dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-logging") 
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.batch:spring-batch-core:3.0.4.RELEASE")
  //  compile 'org.springframework.batch:spring-batch-admin-manager:1.3.1.RELEASE'
   
    compile('org.springframework.batch:spring-batch-admin-manager:2.0.0.BUILD-SNAPSHOT') {
        exclude group: 'net.sf.ehcache', module: 'ehcache-core'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'org.springframework', module:'spring-webmvc'
        exclude group: 'org.springframework', module: 'spring-context-support'
    }

   // compile('org.springframework.batch:spring-batch-admin-resources:2.0.0.BUILD-SNAPSHOT') {
   //    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
   //    exclude group: 'org.springframework', module: 'spring-context-support'
   // }
    
    compile 'org.apache.camel:camel-core:2.15.2' 
    compile "org.apache.camel:camel-spring-boot:2.15.2"
    compile 'org.apache.camel:camel-spring:2.15.2'
    compile 'org.apache.camel:camel-spring-javaconfig:2.15.2'
    compile "org.apache.camel:camel-bindy:2.15.2"
    compile 'org.apache.camel:camel-csv:2.15.2'
    
    compile("org.projectlombok:lombok:1.16.4")
    compile("com.google.guava:guava:18.0")
    
    compile ("com.jayway.awaitility:awaitility:1.6.3")   
    runtime("mysql:mysql-connector-java")
    
    compile "org.apache.camel:camel-jms:2.15.2"
    compile("org.apache.activemq:activemq-broker")
    compile("org.apache.activemq:activemq-client")
    compile("org.apache.activemq:activemq-camel:5.11.1")
    compile("org.apache.xbean:xbean-spring:4.2") {
        exclude module: "org.springframework:spring"
    }
       runtime("com.h2database:h2")
    
    
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('junit:junit:4.12')
    testCompile('org.easytesting:fest-assert:1.4')
    testCompile 'org.assertj:assertj-core:3.1.0'
}


task listJars << {
    configurations.compile.each { File file -> println file.name }
}
    configurations {
        all {
           resolutionStrategy.eachDependency {
              DependencyResolveDetails details ->
                  if (details.requested.group == 'org.springframework') {
                            details.useVersion '4.1.7.RELEASE'
                     }
            }
            exclude group: "commons-logging"
            exclude module: "slf4j-log4j12"
            exclude module: "hibernate-jpa-2.0-api"
        }
    }
    
println "Using Spring Boot version: [$springBootVersion]"
println "Using Java version: [" + System.getProperty("java.version") + "]"

task wrapper(type: Wrapper) {

}
